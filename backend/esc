[1mdiff --git a/package-lock.json b/package-lock.json[m
[1mindex b2df031..5979de1 100644[m
[1m--- a/package-lock.json[m
[1m+++ b/package-lock.json[m
[36m@@ -13,6 +13,7 @@[m
         "cors": "^2.8.5",[m
         "dotenv": "^16.5.0",[m
         "express": "^5.1.0",[m
[32m+[m[32m        "fs": "^0.0.1-security",[m
         "mongoose": "^8.15.0"[m
       },[m
       "devDependencies": {[m
[36m@@ -487,6 +488,12 @@[m
         "node": ">= 0.8"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/fs": {[m
[32m+[m[32m      "version": "0.0.1-security",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/fs/-/fs-0.0.1-security.tgz",[m
[32m+[m[32m      "integrity": "sha512-3XY9e1pP0CVEUCdj5BmfIZxRBTSDycnbqhIOGec9QYtmVH2fbLpj86CFWkrNOkt/Fvty4KZG5lTglL9j/gJ87w==",[m
[32m+[m[32m      "license": "ISC"[m
[32m+[m[32m    },[m
     "node_modules/fsevents": {[m
       "version": "2.3.3",[m
       "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",[m
[1mdiff --git a/package.json b/package.json[m
[1mindex 4246fe7..cd53c66 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -17,6 +17,7 @@[m
     "cors": "^2.8.5",[m
     "dotenv": "^16.5.0",[m
     "express": "^5.1.0",[m
[32m+[m[32m    "fs": "^0.0.1-security",[m
     "mongoose": "^8.15.0"[m
   }[m
 }[m
[1mdiff --git a/src/constants.js b/src/constants.js[m
[1mindex 0194931..a140351 100644[m
[1m--- a/src/constants.js[m
[1m+++ b/src/constants.js[m
[36m@@ -3,5 +3,20 @@[m [mexport const DB_NAME = "database_Test";[m
 // Enums for question Type[m
 export const QUESTION_TYPE = Object.freeze({[m
   MCQ: "Mcq",[m
[31m-  TRUEorFALSE: "True or False",[m
[32m+[m[32m  INPUT: "Input",[m
 });[m
[32m+[m
[32m+[m[32m// Enums for question Category[m
[32m+[m[32mexport const QUESTION_CATEGORY = Object.freeze({[m
[32m+[m[32m  VOCABULARY: "Vocabulary",[m
[32m+[m[32m  LITERATUREandCULTURE: "Literature & Culture",[m
[32m+[m[32m  GRAMMARandLANGUAGE: "Grammar & Language",[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32m// Enums for question Level[m
[32m+[m[32mexport const QUESTION_LEVEL = Object.freeze({[m
[32m+[m[32m  BEGINNER: "Beginner",[m
[32m+[m[32m  INTERMEDIATE: "Intermediate",[m
[32m+[m[32m  ADVANCED: "Advanced",[m
[32m+[m[32m});[m
[41m+[m
[1mdiff --git a/src/db/index.js b/src/db/index.js[m
[1mindex 475efdd..a7380a9 100644[m
[1m--- a/src/db/index.js[m
[1m+++ b/src/db/index.js[m
[36m@@ -4,7 +4,7 @@[m [mimport { DB_NAME } from "../constants.js";[m
 const connectDB = async () => {[m
   try {[m
     const connectionInstance = await mongoose.connect([m
[31m-      `${process.env.MONGODB_URI}/${DB_NAME}`[m
[32m+[m[32m      `${process.env.MONGODB_URI}/${DB_NAME}?retryWrites=true&w=majority&appName=Cluster1-Production`[m
     );[m
     console.log([m
       `\n MongoDB connected !! DB HOST: ${connectionInstance.connection.host}`[m
[1mdiff --git a/src/index.js b/src/index.js[m
[1mindex 5e2ac4e..9a61c4e 100644[m
[1m--- a/src/index.js[m
[1m+++ b/src/index.js[m
[36m@@ -2,9 +2,10 @@[m [mimport dotenv from "dotenv";[m
 import connectDB from "./db/index.js";[m
 import app from "./app.js";[m
 dotenv.config({[m
[31m-  path: "./.env",[m
[32m+[m[32m  path: "src/.env",[m
 });[m
 [m
[32m+[m
 // Connect to MongoDB, then start the server[m
 connectDB()[m
   .then(() => {[m
[1mdiff --git a/src/models/question.model.js b/src/models/question.model.js[m
[1mindex 0ccf108..ab59088 100644[m
[1m--- a/src/models/question.model.js[m
[1m+++ b/src/models/question.model.js[m
[36m@@ -1,12 +1,15 @@[m
 import mongoose, { Schema } from "mongoose";[m
[31m-import { QUESTION_TYPE } from "../constants.js";[m
[32m+[m[32mimport { QUESTION_CATEGORY, QUESTION_LEVEL, QUESTION_TYPE } from "../constants.js";[m
 [m
[31m-const answerSchema = new Schema({[m
[32m+[m[32mconst answerSchema = new Schema([m
[32m+[m[32m  {[m
   answer: { type: String, required: false, trim: true },[m
   score: { type: Number, required: false, min: 0 },[m
   rank: { type: Number, required: false, min: 1 },[m
   isRevealed: { type: Boolean, default: false },[m
[31m-});[m
[32m+[m[32m  },[m
[32m+[m[32m  { timestamps: true }[m
[32m+[m[32m);[m
 [m
 const questionSchema = new Schema([m
   {[m
[36m@@ -16,6 +19,17 @@[m [mconst questionSchema = new Schema([m
       enum: Object.values(QUESTION_TYPE),[m
       required: false,[m
     },[m
[32m+[m[32m    questionCategory: {[m
[32m+[m[32m      type: String,[m
[32m+[m[32m      enum: Object.values(QUESTION_CATEGORY),[m
[32m+[m[32m      required: false,[m
[32m+[m[32m    },[m
[32m+[m[32m    questionLevel: {[m
[32m+[m[32m      type: String,[m
[32m+[m[32m      enum: Object.values(QUESTION_LEVEL),[m
[32m+[m[32m      required: false,[m
[32m+[m[32m    },[m
[32m+[m[32m    timesSkipped: { type: Number, required: false, min: 0},[m
     answers: [answerSchema], // Embedded answers[m
   },[m
   { timestamps: true }[m
